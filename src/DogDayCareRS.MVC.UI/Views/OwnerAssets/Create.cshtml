@using System.Web.UI.WebControls
@model DogDayCareRS.MVC.DATA.EF.OwnerAsset

@{
    ViewBag.Title = "Create";
    
    ViewBag.Title = "Index";
    var isClient = User.IsInRole("Client");
    var dtClass = isClient ? "hide" : "show";
}

<div class="home">
    <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="/Content/images/Admindoggo.png" data-speed="0.8"></div>
</div>


@using (Html.BeginForm("Create", "OwnerAssets", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-horizontal">
    <h2 class="moveToCenter sig_subtitle page_subtitle">Add A&nbsp; Pup</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group row">
        @*@Html.LabelFor(model => model.AssetPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssetPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetPhoto, "", new { @class = "text-danger" })*@


        <div class="col-md-10 resCreatePoosh">
            @Html.LabelFor(model => model.AssetPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" style="display: inline" name="fupImage" />
        </div>
    </div>
    <div class="form-group row resCreatePoosh">
        @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "[Pup's Name]" } })
            @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Admin") || (User.IsInRole("Employee")))
    {
        <div class="form-group row resCreatePoosh">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "[Owner ID can be located in My Info]" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>
    }



    <div class="form-group row resCreatePoosh">
        @Html.LabelFor(model => model.SpecialNotes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpecialNotes, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "[Any behavior/health concerns]" } })
            @Html.ValidationMessageFor(model => model.SpecialNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Admin") || (User.IsInRole("Employee")))
    {
        <div class="form-group row resCreatePoosh">
            @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "[Date the Pup was approved for daycare]" } })
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>
       
            <div class="form-group row resCreatePoosh">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>}

        <div class="form-group row moveToCenter">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-warning" />
                <div class="btn btn-primary backButton">  @Html.ActionLink("Cancle", "Index")</div>

            </div>

        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#DateAdded").datepicker();
        });
    </script>
}
